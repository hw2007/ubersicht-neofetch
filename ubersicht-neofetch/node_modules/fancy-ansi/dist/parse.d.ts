/**
 * Represents the different kinds of packets that can be parsed
 */
export declare const enum PacketKind {
    UNSET = 0,
    Text = 1,
    ESC = 2,// A single ESC char - random
    Unknown = 3,// A valid CSI but not an SGR code
    SGR = 4,// Select Graphic Rendition
    OSCURL = 5
}
/**
 * Represents a parsed packet
 */
export type Packet = {
    kind: PacketKind;
    text: string;
    url: string;
};
/**
 * Represents an instance of a parser that implements the JavaScript iterator interface
 * @param {string} input - The string to parse
 */
export declare class Parser implements IterableIterator<Packet> {
    private lastIndex;
    private readonly input;
    constructor(input: string);
    /**
     * Get the next parsed packet
     * @returns {IteratorResult<Packet>} The next parsed packet
     */
    next(): IteratorResult<Packet>;
    [Symbol.iterator](): IterableIterator<Packet>;
}
